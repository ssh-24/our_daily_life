/*eslint-disable */
import React, { useState, useEffect } from "react";
import { useSelector, useDispatch } from "react-redux";
import { useAuthContext } from '../hooks/useAuthContext';
import { useCollectionDtl } from '../hooks/useCollectionDtl';
import { useFirestore } from "../hooks/useFirestore";
import { setPfVisible } from "../store/profileSlice";
import { Label } from "@material-ui/icons";
import { ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
import { storage } from "../firebase/config";
import Loading from "../layout/Loading";


function ProfileInput(props) {
    const {user} = useAuthContext()
    const { documents : MyFeedInfo } = useCollectionDtl("FeedData",["UID","==",user.uid]) // firebaseÏóê Ï†ÄÏû•Îêú FeedData Ïª¨Î†âÏÖòÏóêÏÑú Í∞ÄÏ†∏Ïò®Îã§!
    const { documents : UserInfo } = useCollectionDtl("UserData",["UID","==",user.uid]) // firebaseÏóê Ï†ÄÏû•Îêú UserData Ïª¨Î†âÏÖòÏóêÏÑú Í∞ÄÏ†∏Ïò®Îã§!
    const { editDocument : FeedEdit } = useFirestore("FeedData");// Ïª¨Î†âÏÖò Ïù¥Î¶Ñ ÌååÎùºÎØ∏ÌÑ∞Î°ú ÎÑ£Ïñ¥Ï£ºÍ∏∞
    const { editDocument : UserEdit } = useFirestore("UserData");// Ïª¨Î†âÏÖò Ïù¥Î¶Ñ ÌååÎùºÎØ∏ÌÑ∞Î°ú ÎÑ£Ïñ¥Ï£ºÍ∏∞
    const pfVisible = useSelector((state) => state.profileState.pfVisible) // ÌîÑÎ°úÌïÑ Î≥ÄÍ≤Ω Î™®Îã¨ ÌëúÏãú Ïó¨Î∂Ä ( profile change modal )
    let dispatch = useDispatch()
    let [showImg, setShowImg] = useState('') // ÎØ∏Î¶¨Î≥¥Í∏∞ Ïù¥ÎØ∏ÏßÄ
    let [saveImg, setSaveImg] = useState('') // Ïã§Î¨ºÏ†ÄÏû• Ïù¥ÎØ∏ÏßÄ
    let [fade, setFade] = useState('') // Animation Style State
    let [newProfile, setNewProfile] = useState({
        displayName : '',
        profileImage: '',
        profileIntro: '',
    }); // Î≥ÄÍ≤ΩÌï† profile state
    let [imageChangeYN, setImageChangeYN] = useState(false) // ÌîÑÎ°úÌïÑÏÇ¨ÏßÑ Î≥ÄÍ≤Ω Ïó¨Î∂Ä
    let [resultURL, setResultURL] = useState('') // ÏóÖÎ°úÎìú Í≤∞Í≥º Ïù¥ÎØ∏ÏßÄ URL
    let [uploadYN, setUploadYN] = useState(false) // ÏÇ¨ÏßÑ ÏóÖÎ°úÎìú Ïó¨Î∂Ä
    let [loading, setLoading] = useState(false) // Î°úÎî© ( ÏóÖÎ°úÎìú Ï§ëÏóê Î≥¥Ïó¨Ï£ºÎèÑÎ°ù )
    const { displayName, profileImage, profileIntro } = newProfile; // Íµ¨Ï°∞Î∂ÑÌï¥ Ìï†Îãπ --> Í∞í Ï∂îÏ∂ú

    // OnChange
    const onChange = (e) => {
        const { value, name } = e.target; // Ïö∞ÏÑ† e.target ÏóêÏÑú name Í≥º value Î•º Ï∂îÏ∂ú        
        if (e.target.type === 'text') {
            setNewProfile({
              ...newProfile, // Í∏∞Ï°¥Ïùò input Í∞ùÏ≤¥Î•º Î≥µÏÇ¨Ìïú Îí§
              [name]: value // name ÌÇ§Î•º Í∞ÄÏßÑ Í∞íÏùÑ value Î°ú ÏÑ§Ï†ï
            });
        }
        else {
            setPreviewImg(e)
        }
    };

    // Ïù¥ÎØ∏ÏßÄ onChange
    const setPreviewImg = (e) => {
        console.log("Î≥ÄÍ≤ΩÌï† ÌååÏùº -->", e.target.files[0]);

        let reader = new FileReader();
        reader.onload = function(e) {
            // ÎØ∏Î¶¨Î≥¥Í∏∞Ïóê Î≥¥Ïó¨Ï§Ñ state Î≥ÄÍ≤Ω
            setShowImg(e.target.result);
        };
        reader.readAsDataURL(e.target.files[0]);
        setSaveImg(e.target.files[0]);
    }


    //=========================================================
    // ÌèºÏù¥ Ï†úÏ∂úÎêòÎ©¥ Ïã§Ìñâ [ÌîÑÎ°úÌïÑ Î≥ÄÍ≤Ω]
    // Feed : displayName, profileImage Î≥ÄÍ≤Ω
    // User : displayName, profileIntro, profileImage Î≥ÄÍ≤Ω
    //=========================================================
    const onSubmit = (e) => {
        e.preventDefault(); // submitÏãú ÌéòÏù¥ÏßÄ reload Î∞©ÏßÄ
        setLoading(true) // Î°úÎî© ÌëúÏãú

        console.log('ÏÇ¨ÏßÑ Î≥ÄÍ≤Ω Ïó¨Î∂Ä --> ',imageChangeYN)
        if (imageChangeYN) {
            /* ************************************
            *     ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑ Ìè¨Ìï® O Î≥ÄÍ≤Ω
            *********************************** */
           // Ïù¥ÎØ∏ÏßÄ ÏóÖÎ°úÎìú Í≤ΩÎ°ú Ï†ÄÏû• & Í∞ÄÏ†∏Ïò§Í∏∞
            const storageRef = ref(storage, 'images/'+profileImage.name );
            const uploadTask = uploadBytesResumable(storageRef, profileImage); // ÏÑúÎ≤ÑÏóê ÏóÖÎ°úÎìú

            // Ï†ÄÏû•Îê†ÎïåÍπåÏßÄ ÏãúÍ∞ÑÏù¥ Í±∏Î¶¨Îäî ÎìØ Ìï® --> setTimeout ÎìúÍ∞ÄÏûê
            setTimeout(() => {
                getDownloadURL(uploadTask.snapshot.ref)
                .then((downloadURL) => {
                    console.log('downloadURL --> ', downloadURL);
                    // ÏóÖÎ°úÎìúÎêú Í≤ΩÎ°úÎ°ú state Î≥ÄÍ≤Ω --> **useEffect[resultURL] Î°ú Ïù¥Ïñ¥ÏßÑÎãπ**
                    setResultURL(downloadURL)
                })
                .catch((err)=> {
                    alert("ÏÑúÎ≤ÑÏóê Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌñàÏñ¥Ïöîüò• \n Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî!")
                    // Î™®Îã¨ ÎÅÑÍ≥†
                    dispatch(setPfVisible(false))
                })
            }, 2000); // 1Ï¥àÎäî Î∂ÄÏ°±ÌïòÎãπ..
        }
        else {
            /* ************************************
            *     ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑ Ìè¨Ìï® X Î≥ÄÍ≤Ω
            *********************************** */
            if (MyFeedInfo.length !== 0) {
                MyFeedInfo.map((a,i)=>{
                    FeedEdit({ displayName }, a.id)
                })
            }
            UserEdit({ profileIntro, displayName }, UserInfo[0].id)
            .then(()=>{
                // Î™®Îã¨ ÎÅÑÍ≥†
                dispatch(setPfVisible(false))
            })
        }

    }
    //=========================================================



    // ÌîÑÎ°úÌïÑ Î≥ÄÍ≤ΩÏãú URL Î≥ÄÍ≤ΩÎêòÎ©¥ ( ÏÇ¨ÏßÑ O )
    useEffect(()=>{
        if (resultURL !== '' && resultURL !== undefined) {
            setNewProfile({
                ...newProfile,
                profileImage: resultURL
            })

            console.log("ÏµúÏ¢Ö URL --> ",resultURL)
            setUploadYN(true); // ÏÇ¨ÏßÑ ÏóÖÎ°úÎìú Ïó¨Î∂Ä Ï∂îÍ∞Ä
        }
    },[resultURL])

    // ÏóÖÎ°úÎìú, state Î≥ÄÍ≤Ω Ï†ÑÏ≤òÎ¶¨ ÎÅùÎÇòÎ©¥ --> **ÌîÑÎ°úÌïÑ ÏµúÏ¢Ö Î≥ÄÍ≤Ω**
    useEffect(()=>{
        if (uploadYN) {
            console.log("ÌîÑÎ°úÌïÑ Î≥ÄÍ≤Ω ( ÏÇ¨ÏßÑ O ) --> ",newProfile);
            // Í≤åÏãúÎ¨ºÏù¥ ÏûàÎã§Î©¥
            if (MyFeedInfo.length !== 0) {
                MyFeedInfo.map((a,i)=>{
                    FeedEdit({ displayName, profileImage }, a.id)
                })
            }
            UserEdit({ profileIntro, displayName, profileImage }, UserInfo[0].id)
            .then(()=>{
                // Î™®Îã¨ ÎÅÑÍ≥†
                dispatch(setPfVisible(false))
            })
        }
    },[uploadYN])

    // Ï¥àÍ∏∞ mount Ïãú
    useEffect(()=>{
        setFade('transition-end')
        setShowImg('')
        setImageChangeYN(false)
        setUploadYN(false)
        setLoading(false)
    },[])
    
    // Ïª¨Î†âÏÖò Îç∞Ïù¥ÌÑ∞ Î∞õÏïÑÏò§Î©¥ Ï¥àÍ∏∞Ìôî
    useEffect(()=>{
        if (MyFeedInfo != null && UserInfo != null) {
            console.log("Í≤åÏãúÍ∏Ä : ", MyFeedInfo)
            console.log("ÏÇ¨Ïö©Ïûê : ", UserInfo)
            
            // Î∞õÏïÑÏò¨ Í≤ΩÏö∞Ïóê ÏÖãÌåÖ
            setNewProfile({
                displayName : UserInfo[0].displayName,
                profileImage: UserInfo[0].profileImage,
                profileIntro: UserInfo[0].profileIntro,
            })
        }
    },[UserInfo, MyFeedInfo])

    // ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄÍ∞Ä Î≥ÄÍ≤ΩÎêòÎ©¥!
    useEffect(()=>{
        setNewProfile({
            ...newProfile, // Í∏∞Ï°¥Ïùò input Í∞ùÏ≤¥Î•º Î≥µÏÇ¨Ìïú Îí§
            profileImage : saveImg // profileImageÏóê Ïù¥ÎØ∏ÏßÄ Ï∂îÍ∞Ä (file)
        });
        setImageChangeYN(true)
    },[saveImg])

    // Î™®Îã¨ on/off Ïãú
    useEffect(()=>{
        setImageChangeYN(false)
        setUploadYN(false)
        setLoading(false)
    },[pfVisible])

    // EscÎ°ú Î™®Îã¨ ÎÅÑÍ∏∞
    window.onkeydown = (e) => {
        if(e.key === 'Escape') {
            console.log('Íæ∏')
        }
    }
    window.onkeyup = (e) => { 
        if(e.key === 'Escape') {
            console.log('Ïö±')
            dispatch(setPfVisible(false))
        }
    }

    return (
        <>
            {
                // Î°úÎî©Ï§ë
                loading ? 
                <Loading/>
                : null
            }
            {/* Îí§Ïóê ÏöîÏÜåÎì§ ÎçÆÏñ¥ÏÑú Î™®Îã¨Îßå Î≥¥Ïù¥Í≤å */}
            <div className={`dimmed-layer ${fade}`}/>

            <div className={`input-area transition-start ${fade}`}>
                <div className="form-container">
                    <form onSubmit={onSubmit}>
                        <div className="form-group profile-input">
                            <Label/>
                            <input accept="image/jpeg,image/png,image/heic,image/heif,video/mp4,video/quicktime" className="img-input profile-text-input" multiple="" type="file" onChange={onChange}/>
                        </div>
                        {/* Ïù¥ÎØ∏ÏßÄ ÎØ∏Î¶¨Î≥¥Í∏∞ */}
                        { showImg.length > 0 && <img src={showImg ?? showImg} alt="" style={{marginBottom : '13px',width : '80%', maxHeight:'200px'}}/>}
                        
                        <div className="form-group profile-input">
                            <Label/>
                            <input type="text" name="displayName" value={displayName} onChange={onChange} className="form-control profile-text-input" placeholder="ÎãâÎÑ§ÏûÑÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî!" required/>
                        </div>

                        <div className="form-group profile-input">
                            <Label/>
                            <input type="text" name="profileIntro" value={profileIntro} onChange={onChange} className="form-control profile-text-input" placeholder="ÏÜåÍ∞úÍ∏ÄÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî!" required/>
                        </div>
                        <input type="submit" className="post-btn" value="Ï†ÄÏû•ÌïòÍ∏∞"/>
                        <div className="close-btn">
                            <CloseBtn onClick={(e)=>{
                                e.preventDefault()
                                dispatch(setPfVisible(false))
                            }}/>
                        </div>
                    </form>
                </div>
            </div>
        </>
    )
}

export default ProfileInput;


const CloseBtn = (props) => (
    <svg
        // width="800px"
        // height="800px"
        viewBox="0 0 16 16"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        {...props}
    >
    <title>{"close"}</title>
    <path
      fill="#FFFFFF"
      d="M12.78 4.28a.75.75 0 00-1.06-1.06L8 6.94 4.28 3.22a.75.75 0 00-1.06 1.06L6.94 8l-3.72 3.72a.75.75 0 101.06 1.06L8 9.06l3.72 3.72a.75.75 0 101.06-1.06L9.06 8l3.72-3.72z"
    />
  </svg>
);